---
title: "MP2 Technical Report: "
author: "Katy Cummings, Tulip Daaboul, Michel Ruiz-Fuentes"
format: pdf
editor: visual
  markdown: 
    wrap: 72
date: "`r Sys.Date()`"
indent: true
---

## Introduction

## Methodology

Our project's experimental units consisted of thirty-five Smith College students. We collected participants using a convenience sample, as those who took the survey came majority from our Research Design and Analysis class, other classes, and some of our student organizations on campus. Because the respondents came from a very specific demographic, we cannot generalize results to the Smith population. If random sampling was used, then, we would have been able to generalize to Smithies. 

However, we used random assignment when assigning the treatments to our participants, making our project an experiment. Our two treatments were Milk Type and Advertisement type. Participants were first assigned to either receive a dairy or plant based milk photo. Then, random assignment was used again and participants either received positive remarks with their assigned photo, negative remarks, or no remarks at all and just the photo (which acted as the control). 

The independent variables (experimental factors) in our study were the two treatments, milk type and advertisement type which were both categorical. The dependent variable was average consumption, which is continuous. After seeing their treatment, participants rated on an ordinal scale from 1-5 (1 being least likely, 5 being most likely) on how many times a week they consume the type of milk they were shown. This study is interested in how different ad contents (milk v non dairy) and sentiment types (positive, negative, neutral ad ) influence people\'s perception of the dairy industry.

## Results

[**Load Data:**]{.underline}

```{r, LOADPKGE, warning=F, message=F, echo=FALSE}
library(tidyverse)
library(rio)
library(asbio)
library(dplyr)
library(ggplot2)
library(Stat2Data)
library(car)

milk_df1 <- import("milk_cleaned_data.csv")

milk_df1$milk_type <- as.factor(milk_df1$milk_type)
milk_df1$ad_type <- as.factor(milk_df1$ad_type)
milk_df1$treatment <- as.factor(milk_df1$treatment)
```

[**Descriptive Statistics**]{.underline}:

```{r, SUMMARYSTATS, warning=F, message=F, echo=FALSE}
#TREATMENT GROUP STATS
milk_summary <- 
  milk_df1 |>
  group_by(treatment) |>
  summarise(group_mean=mean(average_consumption), 
            group_n=n(), 
            group_sd=sd(average_consumption),
            group_min= min(average_consumption),
            group_max= max(average_consumption))  
milk_summary
```

[**Condition Check 1 Variability & Standard Deviation**]{.underline}:

Our largest standard deviation \[`Plant Control & Dairy Control`\] 1.38 divided by the smallest standard deviation \[`DairyCon(-)`\] 1.05 equals 1.31. Their quotient is smaller than 2, so we do not violate the condition about constant variance for our ANOVA model.

```{r, CONDI01, warning=F, message=F, echo=FALSE}
#STANDARD DEVIATION (constant variance)
1.38/1.05
```

[**Condition Check 2 Symmetrical Distribution around Group Means**]{.underline}:

We will compare the variation in the interquartile ranges of each `treatment`. This plot demonstrates that our distribution across the six groups are not equally distributed and violate our constant variance condition.

```{r, CONDI02, warning=F, message=F, fig.height = 3, fig.width = 6, fig.align = "center", echo=FALSE}
#BOX PLOT (constant variance)
milk_means <-
  ggplot(data=milk_df1, aes(x=average_consumption, y=treatment)) + 
  geom_boxplot(fill="steelblue3") + 
  stat_summary(fun="mean") + 
  labs(title ="Consumer Likelihood Box Plot",
      subtitle= "Assessing Distribution by Treatment",
      caption ="source: Qualtrics Milk Data") +
  xlab("Average Consumption") +
  ylab ("Treatment") + coord_flip()
milk_means
```

[**Levene's Test:**]{.underline}

```{r, LEVENET, warning=F, message=F, echo=FALSE}
leveneTest(average_consumption~treatment, data=milk_df1)
```

We conducted Levene's test to have more proof that we do not have constant varience

[**Condition Check 3 Additive Effects & Transformation**]{.underline}:

The Tukey Non-Additivity plot model helps us understand the relationship between the affect of both treatments over what we predicted. It also allows us to assess if the affects of treatments are additive or if there is some interaction. We want to relationship between the x-axis and y-axis to have a slope of 0 to indicate there is no relationship. However, because the data violates several assumptions and the slope is 2.7, so we must transform the data.

To diagnose the type of transformation we subtract 1-slope or 1-2.7 which gives the difference of -1.7. Because our P=-1.7, we must use a reciprocals transformation of 1/y.

```{r, CONDI03, warning=F, message=F, fig.height = 3, fig.width = 6, fig.align = "center", echo=FALSE}
TukeyNonaddPlot (average_consumption ~ ad_type + milk_type, data=milk_df1)
```

```{r, INTERPRET, warning=F, message=F, echo=FALSE}
#RECIPROCAL TRANSFORMATION

milk_df1$average_consumption_transformed <- (1/milk_df1$average_consumption)

```

```{r, TUKEY2, warning=F, message=F, echo=FALSE}
TukeyNonaddPlot (average_consumption_transformed ~ ad_type + milk_type, data=milk_df1)
```

Although we are getting close to a slope of 0, we are not there yet, meaning an interaction might still be better for this model.

[**Two-Way ANOVA Model**]{.underline}:

```{r, MOD01, warning=F, message=F, echo=FALSE}
milk_anova <- aov(average_consumption~ad_type*milk_type, data=milk_df1) 
summary(milk_anova) 
```

[**Independent residuals:**]{.underline}

```{r, QQPLOT, warning=F, message=F, fig.height = 3, fig.width = 6, fig.align = "center", echo=FALSE}
plot(milk_anova, which = 2)
```

```{r, RESVFIT, warning=F, message=F, fig.height = 3, fig.width = 6, fig.align = "center", echo=FALSE}
plot(milk_anova, which = 1)
```

[**Confidence Intervals & Effect Size**]{.underline}:

```{r, TUKEY, warning=F, message=F, echo=FALSE}
#TUKEYHSD()
milk_tukey <- TukeyHSD(milk_anova)
milk_tukey
```

```{r, LSD, warning=F, message=F, echo=FALSE}
#FISHERSLSD
milk_lsd <-
  pairw.anova(milk_df1$average_consumption, 
              milk_df1$treatment,
              method="lsd", 
              conf.level=.95)
milk_lsd
```

```{r, BON, warning=F, message=F, echo=FALSE}
#BONFERONNI
milk_bonf <- 
  bonfCI(milk_df1$average_consumption, 
         milk_df1$treatment,
         conf.level = 0.95)

milk_bonf
```

[**R-Squared:**]{.underline}

we can get our r-squared from our anova

## Conclusion
